{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x0e40E59B71725043d847A50A647BbaFD24d2e74E",
      "txHash": "0x97403069455dda3ca714d7bcb7a2e12bf43237f57be00502cb3d06aa98fded50",
      "kind": "uups"
    },
    {
      "address": "0x4e1e1c633D7770679e6c9748e940AfE4fD59816E",
      "txHash": "0x9db3afe2ba3669f7d56959df4fec822e480f2967f9dfc80f44355e17cf53f533",
      "kind": "uups"
    },
    {
      "address": "0x9A24180389180a0fc2e849C8995fB38B5088fB5B",
      "txHash": "0x552ac8add164203e3c3a7eaabb9abf75f718b8e8c7a03b8d0fc9282b8801839f",
      "kind": "uups"
    },
    {
      "address": "0x618148f2Bb58C5c89737BB160070613d4E1b790a",
      "txHash": "0xf1f07318a8d0fed7bd3aa4fb1d3a47a1816ef304f78662116670686cf59c6eb7",
      "kind": "uups"
    },
    {
      "address": "0x34834F208F149e0269394324c3f19e06dF2ca9cB",
      "txHash": "0x049f8c9c357974a6184d6938b43565d5a79b1b0dfb38cf10ea07d645c96cc498",
      "kind": "uups"
    },
    {
      "address": "0x2F6cddD6d22B0FA917CC81166D26B4b9C9834f9A",
      "txHash": "0x4302936a820e7312a9cb718b95dffb6029cfcf17380117f22b4b6c73ba4f1b52",
      "kind": "uups"
    },
    {
      "address": "0xD8C64CBEF2cAFc34179046606808f38346eE97cB",
      "txHash": "0x34dd80f193c389f85c1b65715f06a93386946897783cd539c1c927cf79ed6ea4",
      "kind": "uups"
    },
    {
      "address": "0x6Da063263f272A0EEefB6e505BCD3D7033776e47",
      "txHash": "0xd18cd5b7c7f852bf45044d0fccf558809ddf6af9fa982adadf2bd79415fb6314",
      "kind": "uups"
    },
    {
      "address": "0xd9Dfe51ACB457926bA170Eb97A402dc4B6219A36",
      "txHash": "0x4b4494580f97ede8905b7ba06693dc171257c9e664ec47f22d2306112d8ec9fb",
      "kind": "uups"
    },
    {
      "address": "0xA017E630dB1BF7eC977cF733cA20CedB4A3EC644",
      "txHash": "0xefd28c459287061ec98004244b27f319c89d4c202dbb3f3f09fee94bef0e9c7a",
      "kind": "uups"
    },
    {
      "address": "0xf697D4c687Da3de83eC9905D2D8A01042d14A2a1",
      "txHash": "0xac19e0683fcd56542009344c34b3c9d73ca49f9ce914539da49ca238de56e342",
      "kind": "uups"
    },
    {
      "address": "0xaF482026220d2b30eEd823a0D158800dAB2bc090",
      "txHash": "0x4482dac0e5368999b64980e9acfd6a32477b1f8e451e66d627695f4aad6247f3",
      "kind": "uups"
    },
    {
      "address": "0xB2F53C2c409690852a45c6248C9D8578a938dB38",
      "txHash": "0xaf602825e4402d631898ebd53476753752b01a26fe7de5f88b6bd2bfe7cc33e7",
      "kind": "uups"
    },
    {
      "address": "0xeA013B26B943B2eA7C8F6427C9f9aB4489320603",
      "kind": "uups"
    },
    {
      "address": "0xfdd3EA942CEA0DB19b00C8Db708ebf249eDC586c",
      "txHash": "0xab7bb6ba92142d59ff50bfc280b762cac389c651b55619f8ff6b3409c8568463",
      "kind": "uups"
    },
    {
      "address": "0xb2279428ACb2654619B4304f5A26F2508F092B4c",
      "txHash": "0x4adade054288ebc68a7ace24ed621221d8089a8aa49dc32e8191a08563084df3",
      "kind": "uups"
    },
    {
      "address": "0xF733dCb4FBD4913D9864440aCcfD54Fbc6073088",
      "txHash": "0xd157bd4c215d0b43aeab845ef6deffdad05b89410fd997add55b48d05b629570",
      "kind": "uups"
    },
    {
      "address": "0x291171452a2d9Da1951ED3E687e8c12D5CB9e08A",
      "txHash": "0x7dae094971a9c0625de8489d9d426f794e97be906a77be6de8e32111a0113f29",
      "kind": "uups"
    },
    {
      "address": "0x6A6c14a89215Df0100C220e883278B9dA6286b4a",
      "kind": "uups"
    },
    {
      "address": "0x1A8B9822C98dF3F527b3D0a5e71CC45243F2f6F7",
      "kind": "uups"
    },
    {
      "address": "0x69803d3cbfef8a511F147988c1928Aaf9aC7BF86",
      "txHash": "0x6c32972893835ff031c0b018d7824af72762621dcbb55f4422ba00ed079bba49",
      "kind": "uups"
    },
    {
      "address": "0x1DAa512cF46076A82Fa7e533754767Efb5B5aFAB",
      "txHash": "0x23490ec838f143cd26d672e32b9c47dd1773a1f2c3ce53264f4317bb4a111071",
      "kind": "uups"
    },
    {
      "address": "0x5BFeb1C58BC6557d4659694195BDFB96Eb433460",
      "txHash": "0x8d17edf28c164dfbfddf4c7df561b4fc7f8c6d57bc11dce379ca555491768a13",
      "kind": "uups"
    },
    {
      "address": "0xe2dEb3e08dd1B29C03E0494F22014e65Ab0cc326",
      "txHash": "0x91f52c1387fe3e45c503aed4a1e09ab41cfe88d6e25325065ce6bc6c6c2a9427",
      "kind": "uups"
    },
    {
      "address": "0xdB4E2f9946C74cff004B55c46576B05aACF0A509",
      "txHash": "0xb858ae25dfefa07b0c3f8b5352cc245efff92ffc41cf781f9bf141a27bb8e104",
      "kind": "uups"
    },
    {
      "address": "0x7829d275E5fc509f3D9ad76EbbEb1c87d9f1BdA5",
      "txHash": "0xf261ea3e454087fed3c79486ded36948c3b560d1b9dfd6cf5862694ff85adf9b",
      "kind": "uups"
    },
    {
      "address": "0x0641bC2cA82399efEE0328c4A13C938e5B6b8610",
      "txHash": "0xbde6e4a2c2c4340013b7e287090b5e81068a568758ed67588082ae6f1ae896ee",
      "kind": "uups"
    },
    {
      "address": "0x7627808213E137b4674F19D5E0438c11c2008efb",
      "txHash": "0xc7ec1c99eab1d58f3d591004a70e0b23f4e0c0041ca62264e0f3820ad56017df",
      "kind": "uups"
    },
    {
      "address": "0xF670d9C4517cd15857B327cAf8514b4564fc28bb",
      "txHash": "0xc586d7cc5bf7fec4dbe382f256660a42d5f2f59ab6bcf728faccab561fcd9539",
      "kind": "uups"
    },
    {
      "address": "0x84d265a80e087051E308826f29B5CE87456C96d4",
      "txHash": "0x0bf3735a656b0b580532f3d4684f13f901aefed5279e06aa246e374265013131",
      "kind": "uups"
    },
    {
      "address": "0x71B2F5C6fdb9c9B9E2BAEB02B26FDF61A344601D",
      "txHash": "0x03d3449f795ed358335a0b613a696bd68e3d504638adae5df5d3ffc261478177",
      "kind": "uups"
    },
    {
      "address": "0x2ac364a2BcE34409370D58A69786252ABc7260da",
      "txHash": "0x25b2ce537cd503d5bd9e5079cf2bd33a3c29b7f0a17537404ee8385ea8aeafff",
      "kind": "uups"
    },
    {
      "address": "0x2b7338b65C5A2F29970C61A7FA51b3706CD8B8c9",
      "txHash": "0x5c8e0d93917ec158501a355f95b4af4f3651c1ad0f2723f8f8291876750ad4da",
      "kind": "uups"
    },
    {
      "address": "0x90dD086E3a053B0beB911b84259f58CBFeC57ED5",
      "txHash": "0x1c9276e5b3453e362e0206627b1bb1ed920ffa1fc6acb3c3f6303e3cb71cca85",
      "kind": "uups"
    },
    {
      "address": "0x095b9266D0B11e93DAA09B10A4b75C997F42dE41",
      "txHash": "0xcc6cd1f15958cb14d0670aee5c1153165ae599b480f2de4b6234636168ac1759",
      "kind": "uups"
    },
    {
      "address": "0xA52F62bADa80F528C3Dc6495f240177b9461499d",
      "txHash": "0xcbe5451fccd7f2a5083bb097aa17f53dcd525e97d5578b26b630c3e4a3b4ff97",
      "kind": "uups"
    },
    {
      "address": "0xcB684AE8A0eedDc44e8D3628ca423c578Ec9b1c1",
      "txHash": "0x337ac5f33b156af59fa31bc7e2f53003d1b6657ac215a9e73c37e93637e21281",
      "kind": "uups"
    },
    {
      "address": "0xAf358d9d67e5685E23d81C4b892ed4Ed59cF1457",
      "txHash": "0x3a5bc1a2a3f20548450c4e012ddcca466f1ce57862434ab4af1f169e5dad0952",
      "kind": "uups"
    },
    {
      "address": "0x2fe04E863A3B2D991a246c70F5FE6DbF46253581",
      "txHash": "0xd318afe6f75c21498708167214d96d8f4821443f8e0ff106faf55c759877cdfb",
      "kind": "uups"
    },
    {
      "address": "0xbb26767C646A9fe495E69224F1D3E713C48797Ba",
      "txHash": "0x2e55f7a3f093bc426d81ce9bb536c0fd3e41af7d2c2df7eb82d724e25bb2ce6b",
      "kind": "uups"
    },
    {
      "address": "0x91d9Cf3Ee90e757dA6B01E896BD60D281bc6E93a",
      "txHash": "0x83f05db1b9017d986f2f5aeb3f6a12af0c013bd66701185bfa6668f6326d5733",
      "kind": "uups"
    },
    {
      "address": "0xF5c947622334C2D312090b63A52593AA5F94246A",
      "txHash": "0x77aa202aae22a5c80df64e6eb26d083b103598f16b971407c3c7b984e6376b01",
      "kind": "uups"
    },
    {
      "address": "0xa6C1Fb41352A89E9e9826924aC967627a08B7F1A",
      "txHash": "0xfb526093d05a42d5445f0467579f45e956b8c59c8980a1fa307b7587738934fe",
      "kind": "uups"
    },
    {
      "address": "0x813fbbBb2BBde225389220A3E4d436EE73F3c172",
      "kind": "uups"
    },
    {
      "address": "0x6F5B12b9b041BC76e8B680219BD2d67c62F95972",
      "kind": "uups"
    }
  ],
  "impls": {
    "cc49ac8110b5e21338eccf65acef9fea0f5f7b7517687128281b8dff7512c5fb": {
      "address": "0xa9caaeffCFEd200454C3272BD2166429846ecD0D",
      "txHash": "0x8b95e3437d86471f6cc337f04a3c5d1247eb14d4b0dac800d14cd39f5b53d01b",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(FilledOrder)1414_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)1427_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)592": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)869": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)1414_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)1378_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(FilledOrder)1414_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)77_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)1348_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)592",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)869",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)1378_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)1414_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)1427_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              }
            ],
            "numberOfBytes": "480"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)203_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)264_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)1378_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(WithdrawalRequest)1427_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)592",
              "src": "contracts/StVolHourly.sol:45",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)869",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)1378_storage)",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)1414_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)1427_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "14"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0xa9caaeffCFEd200454C3272BD2166429846ecD0D",
        "0x7310760c1628c102D20fAff1caE3fA4F4BF00383",
        "0x56b7F20033cD3909938B9953480706354a171582",
        "0x0784cD148455e6568CbD528447F9344Dd7C07877"
      ]
    },
    "b5546a37f35b7bf405c185decc788444549ff6a99cd122c7412432c94f8f43c0": {
      "address": "0x6C84373E789f4099243BFeef1aE619fc477d9716",
      "txHash": "0xfc3dd10235d1aff70562fe9ebc76f8781da8acb2e23051b79c7325d2c1c995c5",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(FilledOrder)751_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)764_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)388": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)567": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)751_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)715_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(FilledOrder)751_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)685_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)388",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)567",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)715_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)751_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)764_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              }
            ],
            "numberOfBytes": "480"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)715_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(WithdrawalRequest)764_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)388",
              "src": "contracts/StVolHourly.sol:45",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)567",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)715_storage)",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)751_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)764_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "14"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "616af5af12ea1d4b0e4c29a4f88c135fcea864239041f3aba964a17d367c5e58": {
      "address": "0x548b909a0F8b2a8F2943c840a91641C20575BF74",
      "txHash": "0x7d5087753d5553d363a91c372a9a2dd3e3ab7ec2d003a016a788f1b906751c20",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(FilledOrder)751_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)764_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)388": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)567": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)751_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)715_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(FilledOrder)751_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)685_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)388",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)567",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)715_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)751_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)764_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              }
            ],
            "numberOfBytes": "480"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)715_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(WithdrawalRequest)764_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)388",
              "src": "contracts/StVolHourly.sol:45",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)567",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)715_storage)",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)751_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)764_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "14"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e3a08d5131d7b2556ae4e7a9256d0441c68446b3e693fbde14fe06eda15afeec": {
      "address": "0xa657adF3D88e7B1642C71e0AE8ccCd032321392e",
      "txHash": "0xe4bb64cfc9a9cdb804c5cd955934fcb81ed5428ff8e7e1fdb9dee1b04eda7424",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(FilledOrder)751_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)764_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)388": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)567": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)751_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)715_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(FilledOrder)751_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)685_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)388",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)567",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)715_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)751_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)764_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              }
            ],
            "numberOfBytes": "480"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)715_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(WithdrawalRequest)764_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)388",
              "src": "contracts/StVolHourly.sol:45",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)567",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)715_storage)",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)751_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)764_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "14"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c1c63bdeebbf0ca62762350852272c1bd993bd9f4101e467f139fffe6d4b4488": {
      "address": "0x791FAf726fEB65B84469d6F1291CDF7BA4D8aB89",
      "txHash": "0xd84e1e2ac8ac18bd947cc81dc2dbdbe56b572bef9545d4d47b1ce6ac91ce75af",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Coupon)787_storage)dyn_storage": {
            "label": "struct StVolHourly.Coupon[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(FilledOrder)763_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)776_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)388": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)567": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Coupon)787_storage)dyn_storage)": {
            "label": "mapping(address => struct StVolHourly.Coupon[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)763_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)727_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Coupon)787_storage": {
            "label": "struct StVolHourly.Coupon",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "expirationEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(FilledOrder)763_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)697_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)388",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)567",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)727_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)763_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)776_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "couponBalances",
                "type": "t_mapping(t_address,t_array(t_struct(Coupon)787_storage)dyn_storage)",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "couponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "usedCouponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              }
            ],
            "numberOfBytes": "576"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)727_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(WithdrawalRequest)776_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)388",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)567",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)727_storage)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)763_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)776_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:60",
              "offset": 0,
              "slot": "14"
            },
            {
              "contract": "StVolHourly",
              "label": "couponBalances",
              "type": "t_mapping(t_address,t_array(t_struct(Coupon)787_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:61",
              "offset": 0,
              "slot": "15"
            },
            {
              "contract": "StVolHourly",
              "label": "couponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:62",
              "offset": 0,
              "slot": "16"
            },
            {
              "contract": "StVolHourly",
              "label": "usedCouponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:63",
              "offset": 0,
              "slot": "17"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d6b06b31670ccc1b982d7a4d13aa04af78ca43da625efb21a85c4abea151827f": {
      "address": "0xeD764FDF79dB675886ff2F035f4dB7f71F435731",
      "txHash": "0x7284aed3f0a605bab0c7cf9cdcd4ad45e7103b7ad61e5a13a14ac683d1df0539",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Coupon)787_storage)dyn_storage": {
            "label": "struct StVolHourly.Coupon[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(FilledOrder)763_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)776_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)388": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)567": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Coupon)787_storage)dyn_storage)": {
            "label": "mapping(address => struct StVolHourly.Coupon[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)763_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)727_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Coupon)787_storage": {
            "label": "struct StVolHourly.Coupon",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "expirationEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(FilledOrder)763_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)697_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)388",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)567",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)727_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)763_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)776_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "couponBalances",
                "type": "t_mapping(t_address,t_array(t_struct(Coupon)787_storage)dyn_storage)",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "couponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "usedCouponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              }
            ],
            "numberOfBytes": "576"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)727_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(WithdrawalRequest)776_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)388",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)567",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)727_storage)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)763_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)776_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:60",
              "offset": 0,
              "slot": "14"
            },
            {
              "contract": "StVolHourly",
              "label": "couponBalances",
              "type": "t_mapping(t_address,t_array(t_struct(Coupon)787_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:61",
              "offset": 0,
              "slot": "15"
            },
            {
              "contract": "StVolHourly",
              "label": "couponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:62",
              "offset": 0,
              "slot": "16"
            },
            {
              "contract": "StVolHourly",
              "label": "usedCouponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:63",
              "offset": 0,
              "slot": "17"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6c8987c5eae8803171467a923b7f9e2d85b6feb922ab9a9cb451c60f7a2ad6b7": {
      "address": "0x07D36291f423C8Ac46805D909d4dBCe6136B2188",
      "txHash": "0x81f23306ac955ea17ee942c1d1ed3325d643897017d4d9048d2d6f57bdf4122a",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Coupon)792_storage)dyn_storage": {
            "label": "struct StVolHourly.Coupon[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(FilledOrder)766_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)779_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)388": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)567": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Coupon)792_storage)dyn_storage)": {
            "label": "mapping(address => struct StVolHourly.Coupon[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)766_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)730_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Coupon)792_storage": {
            "label": "struct StVolHourly.Coupon",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "expirationEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(FilledOrder)766_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)700_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)388",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)567",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)730_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)766_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)779_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "couponBalances",
                "type": "t_mapping(t_address,t_array(t_struct(Coupon)792_storage)dyn_storage)",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "couponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "usedCouponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "couponHolders",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "608"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)730_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(WithdrawalRequest)779_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)388",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)567",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)730_storage)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)766_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)779_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:60",
              "offset": 0,
              "slot": "14"
            },
            {
              "contract": "StVolHourly",
              "label": "couponBalances",
              "type": "t_mapping(t_address,t_array(t_struct(Coupon)792_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:61",
              "offset": 0,
              "slot": "15"
            },
            {
              "contract": "StVolHourly",
              "label": "couponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:62",
              "offset": 0,
              "slot": "16"
            },
            {
              "contract": "StVolHourly",
              "label": "usedCouponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:63",
              "offset": 0,
              "slot": "17"
            },
            {
              "contract": "StVolHourly",
              "label": "couponHolders",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/StVolHourly.sol:64",
              "offset": 0,
              "slot": "18"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "14e1c165d287b0c21c6dc52de5bbba73585ced8a45fe49562d97d05824e404e2": {
      "address": "0x422d85586c5d535010f06BA11ea3A0bEa32E6e33",
      "txHash": "0x8cb615a14045442ba967f8fe796967697600680380911b0618d75e046a0d76b8",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Coupon)792_storage)dyn_storage": {
            "label": "struct StVolHourly.Coupon[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(FilledOrder)766_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)779_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)388": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)567": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Coupon)792_storage)dyn_storage)": {
            "label": "mapping(address => struct StVolHourly.Coupon[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)766_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)730_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Coupon)792_storage": {
            "label": "struct StVolHourly.Coupon",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "expirationEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(FilledOrder)766_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)700_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)388",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)567",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)730_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)766_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)779_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "couponBalances",
                "type": "t_mapping(t_address,t_array(t_struct(Coupon)792_storage)dyn_storage)",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "couponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "usedCouponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "couponHolders",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "608"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)730_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(WithdrawalRequest)779_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)388",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)567",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)730_storage)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)766_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)779_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:60",
              "offset": 0,
              "slot": "14"
            },
            {
              "contract": "StVolHourly",
              "label": "couponBalances",
              "type": "t_mapping(t_address,t_array(t_struct(Coupon)792_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:61",
              "offset": 0,
              "slot": "15"
            },
            {
              "contract": "StVolHourly",
              "label": "couponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:62",
              "offset": 0,
              "slot": "16"
            },
            {
              "contract": "StVolHourly",
              "label": "usedCouponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:63",
              "offset": 0,
              "slot": "17"
            },
            {
              "contract": "StVolHourly",
              "label": "couponHolders",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/StVolHourly.sol:64",
              "offset": 0,
              "slot": "18"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6d37619adfeb09d84d381b69abcc449fdc8f385ff9d37e1bff14a375228eaff9": {
      "address": "0x653ebfa7882d10C5b5b5c615DEB7aD9D82E4Eb51",
      "txHash": "0x06be2826e31dd2aafc2d51b39266d203a37927099482db2f10fad14990ebc81c",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Coupon)792_storage)dyn_storage": {
            "label": "struct StVolHourly.Coupon[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(FilledOrder)766_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)779_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)388": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)567": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Coupon)792_storage)dyn_storage)": {
            "label": "mapping(address => struct StVolHourly.Coupon[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)766_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)730_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Coupon)792_storage": {
            "label": "struct StVolHourly.Coupon",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "expirationEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(FilledOrder)766_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)700_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)388",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)567",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)730_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)766_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)779_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "couponBalances",
                "type": "t_mapping(t_address,t_array(t_struct(Coupon)792_storage)dyn_storage)",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "couponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "usedCouponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "couponHolders",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "608"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)730_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(WithdrawalRequest)779_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)388",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)567",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)730_storage)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)766_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)779_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:60",
              "offset": 0,
              "slot": "14"
            },
            {
              "contract": "StVolHourly",
              "label": "couponBalances",
              "type": "t_mapping(t_address,t_array(t_struct(Coupon)792_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:61",
              "offset": 0,
              "slot": "15"
            },
            {
              "contract": "StVolHourly",
              "label": "couponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:62",
              "offset": 0,
              "slot": "16"
            },
            {
              "contract": "StVolHourly",
              "label": "usedCouponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:63",
              "offset": 0,
              "slot": "17"
            },
            {
              "contract": "StVolHourly",
              "label": "couponHolders",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/StVolHourly.sol:64",
              "offset": 0,
              "slot": "18"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e388080cbb1ea49c096b7bc6116309f82904f0b73b62369a6437461c424c738e": {
      "address": "0x0a5175f9F138A7Bb9e116a18A3c76C4c6C02CE86",
      "txHash": "0x25c3eb8ffdf9ea6237fe3c9a6a3098d14a44c2dbb519378da6172c9fc3d5310d",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Coupon)792_storage)dyn_storage": {
            "label": "struct StVolHourly.Coupon[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(FilledOrder)766_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)779_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)388": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)567": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Coupon)792_storage)dyn_storage)": {
            "label": "mapping(address => struct StVolHourly.Coupon[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)766_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)730_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Coupon)792_storage": {
            "label": "struct StVolHourly.Coupon",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "expirationEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(FilledOrder)766_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)700_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)388",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)567",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)730_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)766_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)779_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "couponBalances",
                "type": "t_mapping(t_address,t_array(t_struct(Coupon)792_storage)dyn_storage)",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "couponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "usedCouponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "couponHolders",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "608"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)730_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(WithdrawalRequest)779_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)388",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)567",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)730_storage)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)766_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)779_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:60",
              "offset": 0,
              "slot": "14"
            },
            {
              "contract": "StVolHourly",
              "label": "couponBalances",
              "type": "t_mapping(t_address,t_array(t_struct(Coupon)792_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:61",
              "offset": 0,
              "slot": "15"
            },
            {
              "contract": "StVolHourly",
              "label": "couponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:62",
              "offset": 0,
              "slot": "16"
            },
            {
              "contract": "StVolHourly",
              "label": "usedCouponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:63",
              "offset": 0,
              "slot": "17"
            },
            {
              "contract": "StVolHourly",
              "label": "couponHolders",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/StVolHourly.sol:64",
              "offset": 0,
              "slot": "18"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d6c58d5b11822e417d68e87bf040924454cc23c6a7e47df78a0b50ca42ca8e16": {
      "address": "0x8F984a6C323Fe58e3F7F1fba69575015BD180bB6",
      "txHash": "0x0f6f9bf5577b3c980370a6dbf226afa5184d39c8bf428d0cd61bf40296139635",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Coupon)1464_storage)dyn_storage": {
            "label": "struct StVolHourly.Coupon[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(FilledOrder)1438_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)1451_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)592": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)869": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(Coupon)1464_storage)dyn_storage)": {
            "label": "mapping(address => struct StVolHourly.Coupon[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)1438_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)1402_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Coupon)1464_storage": {
            "label": "struct StVolHourly.Coupon",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "expirationEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(FilledOrder)1438_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)77_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)1372_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)592",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)869",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)1402_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)1438_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)1451_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "couponBalances",
                "type": "t_mapping(t_address,t_array(t_struct(Coupon)1464_storage)dyn_storage)",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "couponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "usedCouponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "couponHolders",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "18"
              }
            ],
            "numberOfBytes": "608"
          },
          "t_struct(OwnableStorage)27_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)203_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)264_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)1402_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(WithdrawalRequest)1451_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)592",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)869",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)1402_storage)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)1438_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)1451_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:60",
              "offset": 0,
              "slot": "14"
            },
            {
              "contract": "StVolHourly",
              "label": "couponBalances",
              "type": "t_mapping(t_address,t_array(t_struct(Coupon)1464_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:61",
              "offset": 0,
              "slot": "15"
            },
            {
              "contract": "StVolHourly",
              "label": "couponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:62",
              "offset": 0,
              "slot": "16"
            },
            {
              "contract": "StVolHourly",
              "label": "usedCouponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:63",
              "offset": 0,
              "slot": "17"
            },
            {
              "contract": "StVolHourly",
              "label": "couponHolders",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/StVolHourly.sol:64",
              "offset": 0,
              "slot": "18"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f8e1da37474f683e2335b3ee169bc9cf491d262d2adc066a7948e5b7a30b8457": {
      "address": "0xB5eED264d5db63827190882Da974c8F75f745518",
      "txHash": "0x8d2708c4e76b62e47ac4222ea2503e8af6dcad59ba60ae7c64a03001a0186b7e",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Coupon)814_storage)dyn_storage": {
            "label": "struct StVolHourly.Coupon[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(FilledOrder)776_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)801_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)388": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)567": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_enum(WinPosition)718": {
            "label": "enum StVolHourly.WinPosition",
            "members": [
              "Over",
              "Under",
              "Tie",
              "Invalid"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(Coupon)814_storage)dyn_storage)": {
            "label": "mapping(address => struct StVolHourly.Coupon[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)776_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)740_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SettlementResult)788_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.SettlementResult)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Coupon)814_storage": {
            "label": "struct StVolHourly.Coupon",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "expirationEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(FilledOrder)776_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)705_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)388",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)567",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)740_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)776_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)801_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "couponBalances",
                "type": "t_mapping(t_address,t_array(t_struct(Coupon)814_storage)dyn_storage)",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "couponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "usedCouponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "couponHolders",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "18"
              },
              {
                "label": "settlementResults",
                "type": "t_mapping(t_uint256,t_struct(SettlementResult)788_storage)",
                "offset": 0,
                "slot": "19"
              }
            ],
            "numberOfBytes": "640"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)740_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(SettlementResult)788_storage": {
            "label": "struct StVolHourly.SettlementResult",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "winPosition",
                "type": "t_enum(WinPosition)718",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "winAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(WithdrawalRequest)801_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)388",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)567",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)740_storage)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)776_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)801_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:60",
              "offset": 0,
              "slot": "14"
            },
            {
              "contract": "StVolHourly",
              "label": "couponBalances",
              "type": "t_mapping(t_address,t_array(t_struct(Coupon)814_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:61",
              "offset": 0,
              "slot": "15"
            },
            {
              "contract": "StVolHourly",
              "label": "couponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:62",
              "offset": 0,
              "slot": "16"
            },
            {
              "contract": "StVolHourly",
              "label": "usedCouponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:63",
              "offset": 0,
              "slot": "17"
            },
            {
              "contract": "StVolHourly",
              "label": "couponHolders",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/StVolHourly.sol:64",
              "offset": 0,
              "slot": "18"
            },
            {
              "contract": "StVolHourly",
              "label": "settlementResults",
              "type": "t_mapping(t_uint256,t_struct(SettlementResult)788_storage)",
              "src": "contracts/StVolHourly.sol:65",
              "offset": 0,
              "slot": "19"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e5ec06df30e70a6b02b1f7d3ca3f45a1d32dd7dfe5975c022ea51d929bc3a9c3": {
      "address": "0x094eFE483eF2333718821A6db21C683Cf667EA67",
      "txHash": "0x2dbd4c08917aa08dd72a3b6f481fd926ca0564d075af67e201d6d5c34736caf5",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Coupon)814_storage)dyn_storage": {
            "label": "struct StVolHourly.Coupon[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(FilledOrder)776_storage)dyn_storage": {
            "label": "struct StVolHourly.FilledOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(WithdrawalRequest)801_storage)dyn_storage": {
            "label": "struct StVolHourly.WithdrawalRequest[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)388": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IPyth)567": {
            "label": "contract IPyth",
            "numberOfBytes": "20"
          },
          "t_enum(WinPosition)718": {
            "label": "enum StVolHourly.WinPosition",
            "members": [
              "Over",
              "Under",
              "Tie",
              "Invalid"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(Coupon)814_storage)dyn_storage)": {
            "label": "mapping(address => struct StVolHourly.Coupon[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(FilledOrder)776_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.FilledOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Round)740_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.Round)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SettlementResult)788_storage)": {
            "label": "mapping(uint256 => struct StVolHourly.SettlementResult)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Coupon)814_storage": {
            "label": "struct StVolHourly.Coupon",
            "members": [
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usedAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "expirationEpoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "issuer",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(FilledOrder)776_storage": {
            "label": "struct StVolHourly.FilledOrder",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "productId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "strike",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "overUser",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "underUser",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "overPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "underPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "unit",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(InitializableStorage)64_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MainStorage)705_storage": {
            "label": "struct StVolHourly.MainStorage",
            "members": [
              {
                "label": "token",
                "type": "t_contract(IERC20)388",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "oracle",
                "type": "t_contract(IPyth)567",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "adminAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "operatorAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "operatorVaultAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commissionfee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "treasuryAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rounds",
                "type": "t_mapping(t_uint256,t_struct(Round)740_storage)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "userBalances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "filledOrders",
                "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)776_storage)dyn_storage)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "lastSubmissionTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "withdrawalRequests",
                "type": "t_array(t_struct(WithdrawalRequest)801_storage)dyn_storage",
                "offset": 0,
                "slot": "12"
              },
              {
                "label": "lastSettledFilledOrderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "13"
              },
              {
                "label": "lastSettledFilledOrderIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "14"
              },
              {
                "label": "couponBalances",
                "type": "t_mapping(t_address,t_array(t_struct(Coupon)814_storage)dyn_storage)",
                "offset": 0,
                "slot": "15"
              },
              {
                "label": "couponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "16"
              },
              {
                "label": "usedCouponAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "17"
              },
              {
                "label": "couponHolders",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "18"
              },
              {
                "label": "settlementResults",
                "type": "t_mapping(t_uint256,t_struct(SettlementResult)788_storage)",
                "offset": 0,
                "slot": "19"
              }
            ],
            "numberOfBytes": "640"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)190_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)251_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Round)740_storage": {
            "label": "struct StVolHourly.Round",
            "members": [
              {
                "label": "epoch",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isSettled",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endPrice",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "isStarted",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(SettlementResult)788_storage": {
            "label": "struct StVolHourly.SettlementResult",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "winPosition",
                "type": "t_enum(WinPosition)718",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "winAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(WithdrawalRequest)801_storage": {
            "label": "struct StVolHourly.WithdrawalRequest",
            "members": [
              {
                "label": "idx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "user",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "processed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "message",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "created",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:stvolhourly.main": [
            {
              "contract": "StVolHourly",
              "label": "token",
              "type": "t_contract(IERC20)388",
              "src": "contracts/StVolHourly.sol:46",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "StVolHourly",
              "label": "oracle",
              "type": "t_contract(IPyth)567",
              "src": "contracts/StVolHourly.sol:47",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "StVolHourly",
              "label": "adminAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:48",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:49",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "StVolHourly",
              "label": "operatorVaultAddress",
              "type": "t_address",
              "src": "contracts/StVolHourly.sol:50",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "StVolHourly",
              "label": "commissionfee",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:51",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "StVolHourly",
              "label": "treasuryAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:52",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "StVolHourly",
              "label": "rounds",
              "type": "t_mapping(t_uint256,t_struct(Round)740_storage)",
              "src": "contracts/StVolHourly.sol:53",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "StVolHourly",
              "label": "userBalances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "contracts/StVolHourly.sol:54",
              "offset": 0,
              "slot": "8"
            },
            {
              "contract": "StVolHourly",
              "label": "filledOrders",
              "type": "t_mapping(t_uint256,t_array(t_struct(FilledOrder)776_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:55",
              "offset": 0,
              "slot": "9"
            },
            {
              "contract": "StVolHourly",
              "label": "lastFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:56",
              "offset": 0,
              "slot": "10"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSubmissionTime",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:57",
              "offset": 0,
              "slot": "11"
            },
            {
              "contract": "StVolHourly",
              "label": "withdrawalRequests",
              "type": "t_array(t_struct(WithdrawalRequest)801_storage)dyn_storage",
              "src": "contracts/StVolHourly.sol:58",
              "offset": 0,
              "slot": "12"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderId",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:59",
              "offset": 0,
              "slot": "13"
            },
            {
              "contract": "StVolHourly",
              "label": "lastSettledFilledOrderIndex",
              "type": "t_mapping(t_uint256,t_uint256)",
              "src": "contracts/StVolHourly.sol:60",
              "offset": 0,
              "slot": "14"
            },
            {
              "contract": "StVolHourly",
              "label": "couponBalances",
              "type": "t_mapping(t_address,t_array(t_struct(Coupon)814_storage)dyn_storage)",
              "src": "contracts/StVolHourly.sol:61",
              "offset": 0,
              "slot": "15"
            },
            {
              "contract": "StVolHourly",
              "label": "couponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:62",
              "offset": 0,
              "slot": "16"
            },
            {
              "contract": "StVolHourly",
              "label": "usedCouponAmount",
              "type": "t_uint256",
              "src": "contracts/StVolHourly.sol:63",
              "offset": 0,
              "slot": "17"
            },
            {
              "contract": "StVolHourly",
              "label": "couponHolders",
              "type": "t_array(t_address)dyn_storage",
              "src": "contracts/StVolHourly.sol:64",
              "offset": 0,
              "slot": "18"
            },
            {
              "contract": "StVolHourly",
              "label": "settlementResults",
              "type": "t_mapping(t_uint256,t_struct(SettlementResult)788_storage)",
              "src": "contracts/StVolHourly.sol:65",
              "offset": 0,
              "slot": "19"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "674591b8d4d20efe223c276bfa5ec49bf3b5d4c31debccfaf484fce8b495192d": {
      "address": "0x5A1711065569F455009a9699C6A014bAC1D0eD6d",
      "txHash": "0xfc6938faac30e887863afad671e6e553a3fcaa8cd8042cd4186bfe1db4fbf62a",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ce403383c0db2ce9aceac615879b6a8fe5b433683114d6b307f0999d0ff6af03": {
      "address": "0x6fdAE401ED23fabeDf61BDDd25A9c3edddc078B0",
      "txHash": "0x95828b70f3126a675541dc35f7e76c39707e606c912ec5fe9e45e4a991cd0e13",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a48aa7bb3c047404be3868d597baa376c07a887c1901ae5b88d66c2cbe5d6040": {
      "address": "0x1a22C7cb5F7E3878ec15FE87AEAEF8114B406863",
      "txHash": "0xf590618f708ec1883e23f174c6da4484b538eabf42b3b12159716c2e1db7328e",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "80d1a2f627e7d0fbdd584d61aac971447534f6d87e909f8b2ea54a64f1fc96a5": {
      "address": "0xcD22C912F0dCb0068E1B604AA1253C65020F3Dce",
      "txHash": "0x7f27d70d68998dc2da4d1bfcaf779948e87a41a338e572759c21d6e621c3815a",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0f2046a0f99e01145db54e87f8937f502c9954408674a55e23654757f8577887": {
      "address": "0xBd0667c29ed6a22c41352d13091c367a4E9AeD84",
      "txHash": "0x85e16bb561ba0db21ac3e5bbea395d41c041a5d30416334657a04f4875002b6b",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d54ab379f925aac52949e7d9f91f9a31ad456aaaff12026f56ec32037113f09c": {
      "address": "0x387Fc598a8b6e5bD774dbB3359D1D99442fcc63d",
      "txHash": "0xe5078b3487338f4e9e9a386c9a277336a41b3281e7c2644fa82c22d0bc10de3f",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9265ef205c44f79c20b95e151d194e3a6564f59a3ddfc0b31cb5974a3cee1f95": {
      "address": "0x0F68f6cb7e002073fC2E72B2E53Feeb4b6B4D5A3",
      "txHash": "0xd4f781ba22547650c91c17d619c232e6c18818553cda3b219700d62a35894e23",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0x0F68f6cb7e002073fC2E72B2E53Feeb4b6B4D5A3",
        "0xa3a93859d30197c4900DC9335627899ccF2b872F",
        "0x1a22C7cb5F7E3878ec15FE87AEAEF8114B406863"
      ]
    },
    "648478a9a23efcfdba66530e4534d7e0a97c3ba9b40cfeecab0aab62a6bfd6fd": {
      "address": "0xbdCF409C4E1B6a7d199FC57f5057b0B2ab03536F",
      "txHash": "0x78bacbcdc6bc12ee676bec4d40faefb7c0023abb4cd9e1dfa86df887160c970f",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ea22bba7bad77116f40a7c4ec5c140b1a203ec9e0f73e3f9fa03c684367a03c9": {
      "address": "0xEa097c3DD1FFF97D8962eB977Bd945aB29634309",
      "txHash": "0x861088789669cb2ff725371cee292c6dbeef80641d3ecec9cf16b0229b1d41a7",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3302e69afdb5f6b5384bd744bad8f1c6b408e665a152fb95639cc1c267d94db6": {
      "address": "0xE8A8892cA8094B75aB8ba1ba8B7E6a930C50Fb75",
      "txHash": "0xc11f0b79661e6abfbda74d1693dd2f5bda6b092af5993430838152e08409d843",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7b8bf103f004257d7b757d283364ca076695e501e9d26900c343f17f7dc8df55": {
      "address": "0x003dccEE4365301474b59A9c223CB828Da80C9fc",
      "txHash": "0x6a471075ed465937f799d165658538b1d0ff2d911b6845162015123b90aae9b9",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1750a62f028d74d0f8a3f3ccab2f1bd0ed88b34526fe175b398a6afe5a8f26de": {
      "address": "0xAd75E00d7a16C39dF7190740Ded6D8c2e11d02bc",
      "txHash": "0x7c0722ba655a35c20c5fbf04cb0194fb5436891083d0250e6007dea73f51342b",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0xAd75E00d7a16C39dF7190740Ded6D8c2e11d02bc",
        "0x35e2715D6797E021743A605d78AE59151070D113",
        "0xB7C2e04507015D8875eDf5182FdFC007B095431a"
      ]
    },
    "805b4686ac33091ad29d07bd7c93f259ad696aaaaa569deee51e6689045d52ee": {
      "address": "0x20E4822E837b5927A9920739eB579a4c76f1cC1D",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0x20E4822E837b5927A9920739eB579a4c76f1cC1D",
        "0x3168732CAd6CeE0931a4637f9C603c8FcEFf7f66"
      ]
    },
    "60c4ab1997e87b0324e2204515d115aaa23f61ad31ba40645325edf5585b34c8": {
      "address": "0x3Fc38825493957F864dfa63df7478a59A81C7F80",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0x3Fc38825493957F864dfa63df7478a59A81C7F80",
        "0x5E55a49AbA45438DFD146B8657FC80112840D4E1"
      ]
    },
    "d353833e623c95b426e77aad2d625227181bf6c225eb3e2c04b360e3f8bb811e": {
      "address": "0x9e8b6B7FC627683882E1bcFAB0DB71d11edF816c",
      "txHash": "0xdaf63bec7b5a97629f9dc7991ad554e25a35f5fa8184722b96411f9f34d65ec5",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)224_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)288_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9cbc2bb713f0d530a3d67c51a669a1bafae1949b43ebbf9b29d0900844f70f81": {
      "address": "0xFDe9190A8522694475FAdCf82048585A2a16ed59",
      "txHash": "0x93b1d33a5d5b637e481fd27f60923878037067c48aa76182fa0971aead93dcd4",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1209": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)277_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ERC4626Storage)461_storage": {
            "label": "struct ERC4626Upgradeable.ERC4626Storage",
            "members": [
              {
                "label": "_asset",
                "type": "t_contract(IERC20)1209",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_underlyingDecimals",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)128_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)13_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)68_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)724_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:29",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC4626": [
            {
              "contract": "ERC4626Upgradeable",
              "label": "_asset",
              "type": "t_contract(IERC20)1209",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:56",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC4626Upgradeable",
              "label": "_underlyingDecimals",
              "type": "t_uint8",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:57",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b0f8f99ae99a4dae58f90c7b582dab5200b42ab2bbf14f58c118f3cad63fe4c9": {
      "address": "0x379B0bD099763cD03aE4cE000F1d5d4c413B1cad",
      "txHash": "0xe0f8b7475676729ee39039ded2129cc3e27386b243dd3479779d89c4b1eb4882",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1209": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)277_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ERC4626Storage)461_storage": {
            "label": "struct ERC4626Upgradeable.ERC4626Storage",
            "members": [
              {
                "label": "_asset",
                "type": "t_contract(IERC20)1209",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_underlyingDecimals",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)128_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)13_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)68_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)724_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:29",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC4626": [
            {
              "contract": "ERC4626Upgradeable",
              "label": "_asset",
              "type": "t_contract(IERC20)1209",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:56",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC4626Upgradeable",
              "label": "_underlyingDecimals",
              "type": "t_uint8",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:57",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "fdb5f3f60b2f95c36a703b1f56faf3baa543346f9cba9ea70bf7c2442b4cb402": {
      "address": "0x0148C7F01d4a4096c75EdEB99DE1b93dd56765fE",
      "txHash": "0xaf9c7d2d0ed58a5900a398fb05fcd71648d187fa4e2d2105c3522e8bebe22389",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1209": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)277_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ERC4626Storage)461_storage": {
            "label": "struct ERC4626Upgradeable.ERC4626Storage",
            "members": [
              {
                "label": "_asset",
                "type": "t_contract(IERC20)1209",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_underlyingDecimals",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)128_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)13_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)68_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)724_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:29",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC4626": [
            {
              "contract": "ERC4626Upgradeable",
              "label": "_asset",
              "type": "t_contract(IERC20)1209",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:56",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC4626Upgradeable",
              "label": "_underlyingDecimals",
              "type": "t_uint8",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:57",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a45ae90262bcbe6b78f844395e18c43b84431f3818fdb9d69db464b32884b827": {
      "address": "0xEFc8B236d9bBE9DF844Fc60d955eCD73F4bddC16",
      "txHash": "0x96c0c2e9590d768f3083ba7433bfaf9ed521aab854e2cee955f68f42fff11f53",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1209": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)277_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ERC4626Storage)461_storage": {
            "label": "struct ERC4626Upgradeable.ERC4626Storage",
            "members": [
              {
                "label": "_asset",
                "type": "t_contract(IERC20)1209",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_underlyingDecimals",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)128_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)13_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)68_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)724_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:29",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC4626": [
            {
              "contract": "ERC4626Upgradeable",
              "label": "_asset",
              "type": "t_contract(IERC20)1209",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:56",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC4626Upgradeable",
              "label": "_underlyingDecimals",
              "type": "t_uint8",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:57",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6aaa5a9d34225cfe8f190373e31f2b443bd473ee388a6922abd2a4b463b72b3e": {
      "address": "0x6bd95419FD36B9A8409e0e8143a15914307dcAd8",
      "txHash": "0xde9b82f31c7d3c65b2cee73a61c8a44497593d3fb41eca7995fb43dcd28ec836",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1209": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)277_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ERC4626Storage)461_storage": {
            "label": "struct ERC4626Upgradeable.ERC4626Storage",
            "members": [
              {
                "label": "_asset",
                "type": "t_contract(IERC20)1209",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_underlyingDecimals",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)128_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)13_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)68_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)724_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:29",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC4626": [
            {
              "contract": "ERC4626Upgradeable",
              "label": "_asset",
              "type": "t_contract(IERC20)1209",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:56",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC4626Upgradeable",
              "label": "_underlyingDecimals",
              "type": "t_uint8",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:57",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e04713eaa8e93ad9bc83beef74f5d8630804272a5d038326d828bff65e4b89bd": {
      "address": "0x9946AC617DB6601A1821b5F360602cF3A0d272f6",
      "txHash": "0xe657889873fa674808a5b82edb8959a67ae95e3a9f110158a47033f3babb7ced",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1209": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)277_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ERC4626Storage)461_storage": {
            "label": "struct ERC4626Upgradeable.ERC4626Storage",
            "members": [
              {
                "label": "_asset",
                "type": "t_contract(IERC20)1209",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_underlyingDecimals",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)128_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)13_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)68_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)724_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:29",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC4626": [
            {
              "contract": "ERC4626Upgradeable",
              "label": "_asset",
              "type": "t_contract(IERC20)1209",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:56",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC4626Upgradeable",
              "label": "_underlyingDecimals",
              "type": "t_uint8",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:57",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ce8f4960232c82e08d37c54c0daac869ccc0144dc42c68dd6aadfd22c49925e1": {
      "address": "0x29b8bA9a1b797155E9073829d53FD11BD3e32491",
      "txHash": "0x2b77d61f7af98eaad416b32d79bb4fbb04debd61efd46002d1c007822b7a1e90",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1209": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)277_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ERC4626Storage)461_storage": {
            "label": "struct ERC4626Upgradeable.ERC4626Storage",
            "members": [
              {
                "label": "_asset",
                "type": "t_contract(IERC20)1209",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_underlyingDecimals",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)128_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)13_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)68_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)724_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:29",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC4626": [
            {
              "contract": "ERC4626Upgradeable",
              "label": "_asset",
              "type": "t_contract(IERC20)1209",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:56",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC4626Upgradeable",
              "label": "_underlyingDecimals",
              "type": "t_uint8",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:57",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5a6648f5657b42c2d7f548fb2b669199979b045adfe87abcd606d540ae2f95c4": {
      "address": "0x58F093Ed290B1597CdEB9C3FBEEc9d3010A071c6",
      "txHash": "0x0e01f49471e7318d08667b2f6295f591c7d6e803d35baf7e7e49b85b8ea9b392",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1209": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)277_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ERC4626Storage)461_storage": {
            "label": "struct ERC4626Upgradeable.ERC4626Storage",
            "members": [
              {
                "label": "_asset",
                "type": "t_contract(IERC20)1209",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_underlyingDecimals",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)128_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)13_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)68_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)724_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:29",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC4626": [
            {
              "contract": "ERC4626Upgradeable",
              "label": "_asset",
              "type": "t_contract(IERC20)1209",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:56",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC4626Upgradeable",
              "label": "_underlyingDecimals",
              "type": "t_uint8",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:57",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "84d2a87ad124ebbfb10f6da23650b0272406af9c62a9173c08466c7a9de963d5": {
      "address": "0x2f7390F59d9160FCb59ddb830176DF79696C5192",
      "txHash": "0xe0825bdbc2f0a66c2c9081f7f78cea5b01c524a36cb5c0b363f50b9b5c01b841",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1209": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)277_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ERC4626Storage)461_storage": {
            "label": "struct ERC4626Upgradeable.ERC4626Storage",
            "members": [
              {
                "label": "_asset",
                "type": "t_contract(IERC20)1209",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_underlyingDecimals",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)128_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Ownable2StepStorage)13_storage": {
            "label": "struct Ownable2StepUpgradeable.Ownable2StepStorage",
            "members": [
              {
                "label": "_pendingOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)68_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)724_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable2Step": [
            {
              "contract": "Ownable2StepUpgradeable",
              "label": "_pendingOwner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol:29",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC4626": [
            {
              "contract": "ERC4626Upgradeable",
              "label": "_asset",
              "type": "t_contract(IERC20)1209",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:56",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC4626Upgradeable",
              "label": "_underlyingDecimals",
              "type": "t_uint8",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:57",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0be0085050c65389724957dca43872b9d1af90412e959bc6799ab61c3003552b": {
      "address": "0x7195b120043502ccAafAAea5e9Fc8F442d934ffb",
      "txHash": "0xd001f7b5e6e92519bde47ad0f950ae9517bb4c75db70412ad9aeace62f55dfea",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1363": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ERC4626Storage)406_storage": {
            "label": "struct ERC4626Upgradeable.ERC4626Storage",
            "members": [
              {
                "label": "_asset",
                "type": "t_contract(IERC20)1363",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_underlyingDecimals",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)669_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC4626": [
            {
              "contract": "ERC4626Upgradeable",
              "label": "_asset",
              "type": "t_contract(IERC20)1363",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:56",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC4626Upgradeable",
              "label": "_underlyingDecimals",
              "type": "t_uint8",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:57",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d9c5ad83ea90fbf2cdbdad571c1452d8cac11b24df7cae4ba5b52973d84ede50": {
      "address": "0xF8Fe39E649E88968F171C9ce81D0841c6E0f2546",
      "txHash": "0x70f95cf7b972332cec5b94a311deda88a6c49800eaac487f64d95e7f9a50f68d",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1565": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)261_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ERC4626Storage)463_storage": {
            "label": "struct ERC4626Upgradeable.ERC4626Storage",
            "members": [
              {
                "label": "_asset",
                "type": "t_contract(IERC20)1565",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_underlyingDecimals",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)86_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)755_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC4626": [
            {
              "contract": "ERC4626Upgradeable",
              "label": "_asset",
              "type": "t_contract(IERC20)1565",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:56",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC4626Upgradeable",
              "label": "_underlyingDecimals",
              "type": "t_uint8",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:57",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d920d1ca337794d3fe9e3c6ad3e3d0bc6f94699c16ff1cdbb86b6f20a5fc3676": {
      "address": "0x059B934C91AEd943a09880CF66dC9E4b9a76da7f",
      "txHash": "0xc6835d11b040e5c159a12ccd15ae61a3da95f4fbaa221279f8bf2fc9c98805ff",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20)1334": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)261_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ERC4626Storage)463_storage": {
            "label": "struct ERC4626Upgradeable.ERC4626Storage",
            "members": [
              {
                "label": "_asset",
                "type": "t_contract(IERC20)1334",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_underlyingDecimals",
                "type": "t_uint8",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)86_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)755_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC4626": [
            {
              "contract": "ERC4626Upgradeable",
              "label": "_asset",
              "type": "t_contract(IERC20)1334",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:56",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC4626Upgradeable",
              "label": "_underlyingDecimals",
              "type": "t_uint8",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:57",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3868548f700f64f27e6dc3564c7316ab2cf83f164ea8df9aeba26995e926ba87": {
      "address": "0xDb0EE520E58bF5e31EE8Db23D2D2b769D25c9dBe",
      "txHash": "0xc5466a66a77e8bdbdc489c168720fe599c700fae79b3cc4ee572c16cd4afaff3",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)86_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)264_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)340_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b2fb6d8add4100c0c902678c5fd9c2d5954a39a47db1cd7a79171e922fbe070b": {
      "address": "0x273927560f73aD3BB7067859aF4cB756F73bD0cA",
      "txHash": "0x1331d022242da1a2065bba6af449ade9748cc92a00fe6a05a3ed8ff609a1b214",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)86_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)755_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)831_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "369f9f6757ba5561075751290e2ec820c71b557e7146fa67a6212fc116f6229c": {
      "address": "0x2DE22bf77DE789A89D4c9F373B31a6b470f8F7BE",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)86_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)755_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)831_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0x2DE22bf77DE789A89D4c9F373B31a6b470f8F7BE",
        "0xF428E3F33540f60174F6B952186CaEB122250093"
      ]
    },
    "140a55a17ee8fa5c65d6212c2fd797c5c0e13f6c03d226aca84c408da827ca9c": {
      "address": "0x505194107f80F9732c7034FBa7ed6D5E59715e86",
      "layout": {
        "solcVersion": "0.8.29",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)86_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)755_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)831_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0x505194107f80F9732c7034FBa7ed6D5E59715e86",
        "0xBD65021Df71ba60F5F5C8FBc29fBbf2ef552658E"
      ]
    }
  }
}
